{"version":3,"sources":["ServerInterface/data.js","ServerInterface/server.js","components/Home.js","components/Place.js","components/Reviews.js","App.js","reportWebVitals.js","index.js"],"names":["places","name","city","state","description","reviews","text","author","server","getPlaces","addPlaces","value","push","addComment","index","removePlace","splice","Home","props","body","found","map","onSubmit","event","entries","e","includes","input","setState","preventDefault","onInputChange","target","clear","data","this","className","type","onChange","to","pathname","onClick","React","Component","Place","details","temp","i","forceUpdate","homepage","newComment","location","comment","reviewPage","placeholder","rows","cols","Review","place","App","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96506fb2.chunk.js","sourcesContent":["var places = [{name: \"Default Place\", city: \"Tucson\", state: \"Arizona\",\ndescription: \"This is a default place.\",\nreviews:[{text: 'very good!', author: 'Anonymous'}]}];\n\nexport default places\n","import places from \"./data\";\nlet server = {\n  getPlaces: () => {return places},\n  addPlaces:(value) => {places.push(value)},\n  addComment:(index, value) => {places[index].reviews.push(value)},\n  removePlace:(index) => {places.splice(index, 1)}\n};\nexport default server;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport \"./Style.css\";\nimport server from '../ServerInterface/server.js';\n\nclass Home extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: \"\",\n      places: [],\n      found: []\n    }\n  }\n\n  componentDidMount() {\n    let data = server.getPlaces();\n    this.setState({places: data});\n  }\n\n  body = () => {\n    return (\n      <div>\n        {this.state.found.map((value, index) =>\n          <div key={index}>\n            <h3>{value.name}</h3>\n            {value.city}, {value.state}\n            <br />\n            {value.description}\n          </div>)}\n          <br /><br />\n      </div>\n    );\n  }\n\n  onSubmit = (event) => {\n    for (const[i, e] of this.state.places.entries()) {\n      if (e.name.includes(this.state.input)) {\n        this.state.found.push(e);\n      }\n      else if (e.city.includes(this.state.input)) {\n        this.state.found.push(e);\n      }\n      else if (e.state.includes(this.state.input)) {\n        this.state.found.push(e);\n      }\n    }\n    this.setState({input: \"\"});\n    event.preventDefault();\n  }\n\n  onInputChange = (event) => {\n    const value = event.target.value;\n    this.setState({input: value});\n  }\n\n  clear = () => {\n    this.setState({found: []});\n  }\n\n  render() {\n\n    return(\n      <div className=\"container\">\n        <h1>Search for nearby places</h1>\n        <form onSubmit={this.onSubmit}>\n          <label>Search by keyword:&nbsp;</label>\n          <input type=\"text\" name=\"place\" value={this.state.input}\n            onChange={this.onInputChange} />&nbsp;&nbsp;&nbsp;\n          <button type=\"submit\">Search</button>\n        </form>\n        <br />\n        <Link to={{pathname:\"/place\"}}>\n          <div>See available places</div>\n        </Link>\n        {this.body()}\n        <button onClick={this.clear}>Clear</button>\n      </div>\n    );\n  }\n\n}\n\nexport default Home;\n","import React from 'react';\nimport \"./Style.css\";\nimport {Redirect} from 'react-router-dom';\nimport server from '../ServerInterface/server.js';\n\nclass Place extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      city: \"\",\n      state: \"\",\n      description: \"\",\n      details: false,\n      temp: {},\n      homepage: false,\n      places: []\n    }\n  }\n\n  componentDidMount() {\n    let data = server.getPlaces();\n    this.setState({places: data});\n  }\n\n  body = () => {\n    return (\n      <div>\n        {this.state.places.map((value, index) =>\n          <div key={index}>\n            <h3>{value.name}</h3>\n            {value.city}, {value.state}\n            <br />\n            {value.description}\n            <br /><br />\n            <button onClick={() => this.details({value})}>Details</button>&nbsp;&nbsp;&nbsp;\n            <button onClick={() => this.removePlace({value})}>Remove</button>\n          </div>)}\n          <br /><br />\n      </div>\n    );\n  }\n\n  details = (value) => {\n    this.setState({details: true, temp: value});\n  }\n\n  removePlace = (value) => {\n    var index = 0;\n    for (const[i, e] of this.state.places.entries()) {\n      if (e === value) {\n        index = i;\n      }\n    }\n    if (index !== -1) {\n      this.state.places.splice(index, 1);\n      server.removePlace(index);\n      this.forceUpdate();\n    }\n  }\n\n  onSubmit = (event) => {\n    let temp = {name: this.state.name, city: this.state.city, state: this.state.state,\n      description: this.state.description, reviews:[]}\n    server.addPlaces(temp);\n    this.setState({\n      name: \"\",\n      city: \"\",\n      state: \"\",\n      description: \"\"\n    });\n    event.preventDefault();\n  }\n\n  onInputChange = (event) => {\n    const value = event.target.value;\n    this.setState({[event.target.name]: value})\n  }\n\n  homepage = () => {\n    this.setState({homepage: true});\n  }\n\n  newComment = () => {\n    const location = this.props.location;\n    let author = \"\";\n    let text = \"\";\n    let name = \"\";\n    if (location) {\n      if (location.state) {\n        if (location.state.author) {\n          author = location.state.author;\n        }\n        if (location.state.text) {\n          text = location.state.text;\n        }\n        if (location.state.name) {\n          name = location.state.name;\n        }\n      }\n    }\n    let comment = {text: text, author: author};\n    var index = 0;\n    for (const[i, e] of this.state.places.entries()) {\n      if (e.name === name) {\n        index = i;\n      }\n    }\n    if (index !== -1) {\n      server.addComment(index, comment);\n      this.forceUpdate();\n    }\n  }\n\n  render() {\n    const location = this.props.location;\n    if (location) {\n      if (location.state) {\n        if (location.state.author) {\n          this.newComment();\n        }\n      }\n    }\n\n    let reviewPage = {pathname:'/review', state: {temp: this.state.temp}}\n    let homePage = {pathname:'/mynearbyplaces'}\n    if (this.state.details) {\n      return (\n        <Redirect to={reviewPage} />\n      );\n    }\n    if (this.state.homepage) {\n      return (\n        <Redirect to={homePage} />\n      );\n    }\n\n    return (\n      <div className=\"container\">\n        <div>\n          <h1>Available Places</h1>\n          <button onClick={this.homepage}>Back</button>\n          <br /><br />\n          <form className=\"add\" onSubmit={this.onSubmit}>\n            <input placeholder=\"Name\" name=\"name\" type=\"text\" value={this.state.name}\n              onChange={this.onInputChange}/>\n            <br />\n            <input placeholder=\"City\" name=\"city\" type=\"text\" value={this.state.city}\n              onChange={this.onInputChange}/>&nbsp;\n            <input placeholder=\"State\" name=\"state\" type=\"text\" value={this.state.state}\n              onChange={this.onInputChange}/>\n            <br />\n            <textarea placeholder=\"Description\" rows=\"4\" cols=\"50\" name=\"description\"\n             type=\"text\" value={this.state.description} onChange={this.onInputChange} />\n            <br />\n            <button type=\"submit\">Add</button>\n          </form>\n          <br />\n        </div>\n        {this.body()}\n      </div>\n    );\n  }\n}\n\nexport default Place;\n","import React from 'react';\nimport {Redirect} from 'react-router-dom';\n\nclass Review extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      places: [],\n      author: \"\",\n      text: \"\",\n      homepage: false\n    }\n  }\n\n  body = () => {\n    const location = this.props.location;\n    let temp = {};\n    if (location) {\n      if (location.state) {\n        if (location.state.temp) {\n          temp = location.state.temp;\n        }\n      }\n    }\n    return (\n      <div>\n        <h3>{temp.value.name}</h3>\n        {temp.value.city}, {temp.value.state}\n        <br />\n        {temp.value.description}\n      </div>\n    );\n  }\n\n  onSubmit = (event) => {\n    let comment = {text: this.state.text, author: this.state.author};\n    const location = this.props.location;\n    let temp = {};\n    if (location) {\n      if (location.state) {\n        if (location.state.temp) {\n          temp = location.state.temp;\n        }\n      }\n    }\n    temp.value.reviews.push(comment);\n    this.setState({author: \"\", text: \"\"})\n    event.preventDefault();\n  }\n\n  onInputChange = (event) => {\n    const value = event.target.value;\n    this.setState({[event.target.name]: value});\n  }\n\n  reviews = () => {\n    const location = this.props.location;\n    let temp = {};\n    if (location) {\n      if (location.state) {\n        if (location.state.temp) {\n          temp = location.state.temp;\n        }\n      }\n    }\n    return (\n      <div>\n      {temp.value.reviews.map((value, index) =>\n        <div key={index}>\n          <b>{value.author}</b>: {value.text}\n        </div>)}\n      </div>\n    );\n  }\n\n  homepage = () => {\n    this.setState({homepage: true});\n  }\n\n  render() {\n    const location = this.props.location;\n    let temp = {};\n    if (location) {\n      if (location.state) {\n        if (location.state.temp) {\n          temp = location.state.temp;\n        }\n      }\n    }\n    let place = {pathname:'/place', state: {text: this.state.text,\n      author: this.state.author, name: temp.value.name}}\n    if (this.state.homepage) {\n      return (\n        <Redirect to={place} />\n      );\n    }\n\n    return (\n      <div className=\"container\">\n        <h1>Place Details</h1>\n        <button onClick={this.homepage}>Back</button>\n        {this.body()}\n        <br />\n        <form onSubmit={this.onSubmit}>\n          <input type=\"text\" name=\"author\" placeholder=\"Your Name\"\n            value={this.state.author} onChange={this.onInputChange}/>\n          <textarea placeholder=\"Review\" rows=\"4\" cols=\"50\" name=\"text\"\n           type=\"text\" value={this.state.text} onChange={this.onInputChange} />\n          <br />\n          <button type=\"submit\">Add Review</button>\n        </form>\n        <br />\n        {this.reviews()}\n      </div>\n    );\n  }\n\n}\n\nexport default Review\n","import React from 'react';\nimport {\n  BrowserRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Place from \"./components/Place\";\nimport Review from \"./components/Reviews\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/mynearbyplaces/\" render = {props => <Home {...props} />}>\n        </Route>\n        <Route path=\"/place\" render = {props => <Place {...props} />}>\n        </Route>\n        <Route path='/review' render = {props => <Review {...props} />}>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}